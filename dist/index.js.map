{"version":3,"sources":["../src/index.js"],"names":["transformReactFelaDisplayName","t","types","defaultFunctionNameRegEx","defaultReactFelaPackageRegEx","handleInjectDisplayName","initialLineNodePath","componentName","objectName","leftLeft","memberExpression","identifier","left","right","stringLiteral","displayNameAssignment","toStatement","assignmentExpression","insertAfter","identifierComesFromReactFela","identifierDeclarationPath","calleeName","functionNameRegEx","reactFelaPackageRegEx","bindings","scope","sourcePath","path","isImportSpecifier","parentPath","isImportDeclaration","sourceImportFrom","parent","source","value","importedName","node","imported","name","isFromReactFela","test","validImportedName","isVariableDeclarator","init","isMemberExpression","property","callee","object","visitor","AssignmentExpression","opts","RegExp","isCallExpression","injectAssignmentDisplayName","propertyName","variableName","globalSource","binding","importDeclaration","VariableDeclarator","id","injectDisplayName","match","bindingNode","isVariableDeclaration","bindingInit","isRequiredFromReact","arguments","some","arg","functionBinding","isIdentifier","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["const transformReactFelaDisplayName = ({ types: t }) => {\n  const defaultFunctionNameRegEx = /^createComponent(WithProxy)?$/;\n  const defaultReactFelaPackageRegEx = /react-fela(\\/.*(\\.js)?)?$/;\n\n  const handleInjectDisplayName = (initialLineNodePath, componentName, objectName) => {\n    if (!initialLineNodePath || !componentName) return;\n    const leftLeft = objectName\n      ? t.memberExpression(t.identifier(objectName), t.identifier(componentName))\n      : t.identifier(componentName);\n    const left = t.memberExpression(leftLeft, t.identifier('displayName'));\n    const right = t.stringLiteral(componentName);\n    const displayNameAssignment = t.toStatement(t.assignmentExpression('=', left, right));\n    initialLineNodePath.insertAfter(displayNameAssignment);\n  };\n\n  const identifierComesFromReactFela = (\n    identifierDeclarationPath,\n    calleeName,\n    functionNameRegEx,\n    reactFelaPackageRegEx\n  ) => {\n    const { scope: { bindings } } = identifierDeclarationPath;\n    if (!bindings[calleeName]) return false;\n    const sourcePath = bindings[calleeName].path;\n\n    if (sourcePath.isImportSpecifier() && sourcePath.parentPath.isImportDeclaration()) {\n      // Handle cases where the function is imported destructured. For example:\n      //\n      // import { createComponent } from 'react-fela';\n      // /* or */\n      // import { createComponentWithProxy }j from 'react-fela';\n      //\n      const {\n        parent: { source: { value: sourceImportFrom } },\n        node: { imported: { name: importedName } }\n      } = sourcePath;\n      const isFromReactFela = reactFelaPackageRegEx.test(sourceImportFrom);\n      const validImportedName = functionNameRegEx.test(importedName);\n      return isFromReactFela && validImportedName;\n    } else if (sourcePath.isVariableDeclarator()) {\n      const { node: { init } } = sourcePath;\n      // This handles the following case:\n      //\n      // const createComponent = require('react-fela').createComponent;\n      //\n      if (t.isMemberExpression(init)) {\n        const { property, object: { callee } } = init;\n        return (\n          callee && callee.name === 'require' && property && functionNameRegEx.test(property.name)\n        );\n      }\n    }\n\n    return false;\n  };\n\n  return {\n    name: 'transform-react-fela-display-name',\n    visitor: {\n      AssignmentExpression(path, { opts }) {\n        // This adds the ability to handle components created and assigned to objects of properties.\n        // This handles the case of a component being created as a class property. For example:\n        //\n        // class MyParentComponent extends React.Component {\n        //   static MyChildComponent = createComponent(() => ({}), 'div');\n        //   ...\n        // }\n        //\n        const { node: { left, right } } = path;\n        const functionNameRegEx = new RegExp(opts.functionNameRegEx) || defaultFunctionNameRegEx;\n        const reactFelaPackageRegEx =\n          new RegExp(opts.reactFelaPackageRegEx) || defaultReactFelaPackageRegEx;\n        if (t.isMemberExpression(left) && t.isCallExpression(right)) {\n          const injectAssignmentDisplayName = () => {\n            const { object: { name: objectName }, property: { name: propertyName } } = left;\n            return handleInjectDisplayName(path.parentPath, propertyName, objectName);\n          };\n          const { callee } = right;\n          if (t.isMemberExpression(callee)) {\n            // This handles the case where the assignment is to a default import of the package.\n            // For example:\n            //\n            // import ReactFela from 'react-fela';\n            // class MyParentComponent extends React.Component {\n            //   static MyChildComponent = ReactFela.createComponent(() => ({}), 'div');\n            // }\n            //\n            const { object: { name: variableName } } = callee;\n            const { scope: { bindings } } = path;\n            if (variableName && variableName === opts.globalSource) {\n              injectAssignmentDisplayName();\n              return;\n            }\n            const binding = bindings[variableName];\n            if (!binding || !binding.path || !binding.path.parent) return;\n\n            const { path: { parent: importDeclaration } } = binding;\n\n            if (t.isImportDeclaration(importDeclaration)) {\n              injectAssignmentDisplayName();\n            }\n          } else if (\n            identifierComesFromReactFela(\n              path,\n              callee.name,\n              functionNameRegEx,\n              reactFelaPackageRegEx\n            )\n          ) {\n            injectAssignmentDisplayName();\n          }\n        }\n      },\n      VariableDeclarator(path, { opts }) {\n        // Match cases such as:\n        //\n        // const x = y;\n        //\n        const { node: { id, init } } = path;\n        const functionNameRegEx = new RegExp(opts.functionNameRegEx) || defaultFunctionNameRegEx;\n        const reactFelaPackageRegEx =\n          new RegExp(opts.reactFelaPackageRegEx) || defaultReactFelaPackageRegEx;\n        if (!init) return;\n\n        const { callee } = init;\n\n        if (t.isCallExpression(init)) {\n          // Match cases such as:\n          //\n          // const x = y();\n          //\n          const componentName = id.name;\n          const initialLineNodePath = path.parentPath;\n\n          const injectDisplayName = () =>\n            handleInjectDisplayName(initialLineNodePath, componentName);\n\n          if (\n            callee.name &&\n            callee.name.match(functionNameRegEx) &&\n            identifierComesFromReactFela(\n              path,\n              callee.name,\n              functionNameRegEx,\n              reactFelaPackageRegEx\n            )\n          ) {\n            // Match cases such as:\n            //\n            // const x = createComponent(...);\n            // /* or */\n            // const y = createComponentWithProxy(...);\n            //\n            injectDisplayName();\n          } else if (t.isMemberExpression(callee)) {\n            // This handles default imports of createComponent functions. For example:\n            //\n            // import ReactFela from 'react-fela';\n            // const renameIt = createComponent;\n            // const MyComponent = renameIt(...);\n            //\n            const { object: { name: variableName } } = callee;\n            if (variableName && variableName === opts.globalSource) {\n              // This handles the case where the recipient matches the provided global source name.\n              // For example:\n              // /* babel plugin options = { globalSource: 'ReactFela' } */\n              // const MyComponent = ReactFela.createComponent(...);\n              //\n              injectDisplayName();\n              return;\n            }\n            const { scope: { bindings } } = path;\n            if (!bindings[variableName]) return;\n            const { path: { parent, node: bindingNode } } = bindings[variableName];\n            if (t.isImportDeclaration(parent)) {\n              const { path: { parent: { source: { value } } } } = bindings[variableName];\n\n              if (reactFelaPackageRegEx.test(value)) {\n                injectDisplayName();\n              }\n            } else if (t.isVariableDeclaration(parent)) {\n              // This handles the following case:\n              //\n              // const ReactFela = require('react-fela');\n              // const MyComponent = ReactFela.createComponent(...);\n              //\n              const { init: bindingInit } = bindingNode;\n              if (t.isVariableDeclarator(bindingNode) && t.isCallExpression(bindingInit)) {\n                const isRequiredFromReact = bindingInit.arguments.some(arg =>\n                  reactFelaPackageRegEx.test(arg.value)\n                );\n                if (isRequiredFromReact) {\n                  injectDisplayName();\n                }\n              }\n            }\n          } else {\n            const { scope: { bindings } } = path;\n            const functionBinding = bindings[callee.name];\n            if (!functionBinding) return;\n            const { path: { node: { init: bindingInit } } } = functionBinding;\n\n            if (\n              t.isIdentifier(bindingInit) &&\n              identifierComesFromReactFela(\n                functionBinding.path,\n                bindingInit.name,\n                functionNameRegEx,\n                reactFelaPackageRegEx\n              )\n            ) {\n              // This handles renaming of the createComponent functions. For example:\n              //\n              // import { createComponent } from 'react-fela';\n              // const renameIt = createComponent;\n              // const MyComponent = renameIt(...);\n              //\n              injectDisplayName();\n            }\n          }\n        }\n      }\n    }\n  };\n};\n\nmodule.exports = transformReactFelaDisplayName;\n"]}